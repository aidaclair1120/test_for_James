def solution(array):
  length = len(array)
  if length <= 1:
    return array

  middle = length // 2

  leftArray = array[:middle]
  rightArray = array[middle:]

  leftArray = mergeSort(leftArray)
  rightArray = mergeSort(rightArray)
  array = merge(leftArray, rightArray, array)

  return ",".join(array)

def merge(left, right, array):
  leftSize = len(array) // 2
  rightSize = len(array) - leftSize

  i = 0 #index for array
  l = 0 #index for left
  r = 0 #index for right

  while l < leftSize and r < rightSize:
    if (compare(left[l], right[r])):
      array[i] = right[r]
      r = r + 1
    else:
      array[i] = left[l]
      l = l + 1
    i = i + 1

  while l < leftSize:
    array[i] = left[l]
    i = i + 1
    l = l + 1

  while r < rightSize:
    array[i] = right[r]
    i = i + 1
    r = r + 1

  return array

def compare(left, right):
  #function will return True if left is greater than right, or False if right is greater than left
  leftArray = list(map(split_dot, left))
  rightArray = list(map(split_dot, right))

  i = 0
  while i < len(leftArray) and i < len(rightArray):
    if leftArray[i] > rightArray[i]:
      return True
    elif leftArray[i] < rightArray[i]:
      return False
    else:
      i = i + 1
  if len(leftArray) >= len(rightArray):
    return True
  else:
    return False


def split_dot(string1):
  temp_array = []
  new_string = string1.split(".")
  for i in new_string:
    if i.isdigit():
      temp_array.append(int(i))
  return temp_array

list1 = ["1.4", "2.4.1", "3.0.1", "3.0.11", "3", "1.0.8"]

mergeSort(list1)
